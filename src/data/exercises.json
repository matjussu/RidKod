[
  {
    "id": "py_easy_001",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "shopping_cart = ['pain', 'lait', 'œufs']\nshopping_cart.append('fromage')\ntotal_items = len(shopping_cart)\nprint(total_items)",
    "options": ["3", "4", "5", "Error"],
    "correctAnswer": 1,
    "explanation": "La liste commence avec 3 items. append('fromage') ajoute un 4ème item. len() retourne donc 4.",
    "xpGain": 10,
    "tags": ["lists", "methods", "len"]
  },
  {
    "id": "py_easy_002",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "user_score = 0\nfor level in range(3):\n    user_score += 10\nprint(user_score)",
    "options": ["10", "30", "3", "0"],
    "correctAnswer": 1,
    "explanation": "La boucle range(3) itère 3 fois (0, 1, 2). À chaque itération, on ajoute 10 points : 3 × 10 = 30.",
    "xpGain": 10,
    "tags": ["loops", "range", "arithmetic"]
  },
  {
    "id": "py_easy_003",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "employee_name = 'Alice'\nwelcome_message = 'Bonjour ' + employee_name\nprint(len(welcome_message))",
    "options": ["5", "8", "13", "14"],
    "correctAnswer": 2,
    "explanation": "'Bonjour ' (8 caractères avec l'espace) + 'Alice' (5 caractères) = 13 caractères au total.",
    "xpGain": 10,
    "tags": ["strings", "concatenation", "len"]
  },
  {
    "id": "py_easy_004",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "temperature = 15\nif temperature > 20:\n    comfort_level = 'chaud'\nelse:\n    comfort_level = 'froid'\nprint(comfort_level)",
    "options": ["chaud", "froid", "15", "True"],
    "correctAnswer": 1,
    "explanation": "15 n'est pas supérieur à 20, donc la condition est False. Le code exécute le bloc else et assigne 'froid'.",
    "xpGain": 10,
    "tags": ["conditions", "if_else", "comparison"]
  },
  {
    "id": "py_medium_005",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "product_info = {'name': 'Laptop', 'price': 999, 'stock': 5}\nproduct_info['stock'] = product_info['stock'] - 2\nprint(product_info['stock'])",
    "options": ["5", "3", "2", "7"],
    "correctAnswer": 1,
    "explanation": "Le stock initial est 5. On soustrait 2, donc stock devient 5 - 2 = 3.",
    "xpGain": 10,
    "tags": ["dictionaries", "arithmetic", "assignment"]
  },
  {
    "id": "py_medium_006",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "def calculate_discount(price, discount_percent):\n    discount_amount = price * (discount_percent / 100)\n    return price - discount_amount\n\nfinal_price = calculate_discount(100, 20)\nprint(final_price)",
    "options": ["80", "20", "100", "80.0"],
    "correctAnswer": 3,
    "explanation": "20% de 100 = 20. Prix final = 100 - 20 = 80. Python retourne 80.0 (float) car il y a une division.",
    "xpGain": 10,
    "tags": ["functions", "return", "arithmetic", "types"]
  },
  {
    "id": "py_medium_007",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "email_list = ['alice@test.com', 'bob@test.com', 'charlie@test.com']\nremoved_email = email_list.pop(1)\nprint(len(email_list))",
    "options": ["3", "2", "1", "bob@test.com"],
    "correctAnswer": 1,
    "explanation": "pop(1) retire l'élément à l'index 1 ('bob@test.com'). Il reste 2 éléments dans la liste.",
    "xpGain": 10,
    "tags": ["lists", "methods", "indexing", "len"]
  },
  {
    "id": "py_medium_008",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "numbers = [1, 2, 3, 4, 5]\nsquared_numbers = [x * x for x in numbers if x % 2 == 0]\nprint(len(squared_numbers))",
    "options": ["5", "2", "3", "4"],
    "correctAnswer": 1,
    "explanation": "Les nombres pairs sont 2 et 4. La compréhension crée [4, 16]. La longueur est donc 2.",
    "xpGain": 10,
    "tags": ["list_comprehension", "filtering", "len", "modulo"]
  },
  {
    "id": "py_medium_009",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "counter = 0\npasswords = ['123', 'abc', '456789', 'xyz']\nfor pwd in passwords:\n    if len(pwd) >= 6:\n        counter += 1\nprint(counter)",
    "options": ["4", "1", "2", "0"],
    "correctAnswer": 1,
    "explanation": "Seul '456789' a une longueur ≥ 6 caractères. Le compteur s'incrémente une seule fois.",
    "xpGain": 10,
    "tags": ["loops", "conditions", "len", "counter"]
  },
  {
    "id": "py_medium_010",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "sales_data = [150, 200, 175, 300, 250]\ntotal_sales = 0\nfor sale in sales_data:\n    total_sales += sale\naverage_sales = total_sales / len(sales_data)\nprint(int(average_sales))",
    "options": ["215", "216", "1075", "200"],
    "correctAnswer": 0,
    "explanation": "Total = 150+200+175+300+250 = 1075. Moyenne = 1075/5 = 215.0. int(215.0) = 215.",
    "xpGain": 10,
    "tags": ["loops", "arithmetic", "average", "type_conversion"]
  }
]