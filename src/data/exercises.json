[
  {
    "id": "py_easy_001",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "shopping_cart = ['pain', 'lait', 'œufs']\nshopping_cart.append('fromage')\ntotal_items = len(shopping_cart)\nprint(total_items)",
    "options": ["3", "4", "5", "Error"],
    "correctAnswer": 1,
    "explanation": " Ligne 1 : On crée une liste shopping_cart avec 3 items initiaux\n\n Ligne 2 : append('fromage') ajoute un nouvel élément → maintenant 4 items au total\n\n Ligne 3 : len(shopping_cart) compte tous les éléments → retourne 4\n\n Ligne 4 : print() affiche le résultat : 4",
    "highlightedLines": [2, 3],
    "xpGain": 10,
    "tags": ["lists", "methods", "len"]
  },
  {
    "id": "py_easy_002",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "user_score = 0\nfor level in range(3):\n    user_score += 10\nprint(user_score)",
    "options": ["10", "30", "3", "0"],
    "correctAnswer": 1,
    "explanation": " Ligne 1 : user_score démarre à 0\n\n Ligne 2 : range(3) génère [0, 1, 2] → la boucle s'exécute 3 fois\n\n Ligne 3 : À chaque itération, on ajoute 10 au score\n• 1ère fois : 0 + 10 = 10\n• 2ème fois : 10 + 10 = 20\n• 3ème fois : 20 + 10 = 30\n\n Ligne 4 : print() affiche le score final : 30",
    "highlightedLines": [2, 3],
    "xpGain": 10,
    "tags": ["loops", "range", "arithmetic"]
  },
  {
    "id": "py_easy_003",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "employee_name = 'Alice'\nwelcome_message = 'Bonjour ' + employee_name\nprint(len(welcome_message))",
    "options": ["5", "8", "13", "14"],
    "correctAnswer": 2,
    "explanation": " Ligne 1 : employee_name stocke 'Alice' (5 caractères)\n\n Ligne 2 : Concaténation de chaînes\n• 'Bonjour ' = 8 caractères (avec l'espace)\n• + 'Alice' = 5 caractères\n• Résultat : 'Bonjour Alice' = 13 caractères total\n\n Ligne 3 : len() compte tous les caractères → retourne 13",
    "highlightedLines": [2, 3],
    "xpGain": 10,
    "tags": ["strings", "concatenation", "len"]
  },
  {
    "id": "py_easy_004",
    "language": "python",
    "difficulty": 1,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "temperature = 15\nif temperature > 20:\n    comfort_level = 'chaud'\nelse:\n    comfort_level = 'froid'\nprint(comfort_level)",
    "options": ["chaud", "froid", "15", "True"],
    "correctAnswer": 1,
    "explanation": " Ligne 1 : temperature = 15\n\n Ligne 2 : Test de condition : 15 > 20 ?\n• 15 n'est PAS supérieur à 20\n• La condition est False\n\n Ligne 4-5 : Comme la condition est False, on exécute le bloc else\n• comfort_level = 'froid'\n\n Ligne 6 : print() affiche 'froid'",
    "highlightedLines": [2, 5],
    "xpGain": 10,
    "tags": ["conditions", "if_else", "comparison"]
  },
  {
    "id": "py_medium_005",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "product_info = {'name': 'Laptop', 'price': 999, 'stock': 5}\nproduct_info['stock'] = product_info['stock'] - 2\nprint(product_info['stock'])",
    "options": ["5", "3", "2", "7"],
    "correctAnswer": 1,
    "explanation": " Ligne 1 : Création d'un dictionnaire avec stock = 5\n\n Ligne 2 : Modification du stock\n• product_info['stock'] lit la valeur actuelle (5)\n• 5 - 2 = 3\n• On réassigne cette nouvelle valeur au stock\n\n Ligne 3 : print() affiche la nouvelle valeur : 3",
    "highlightedLines": [2, 3],
    "xpGain": 10,
    "tags": ["dictionaries", "arithmetic", "assignment"]
  },
  {
    "id": "py_medium_006",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "def calculate_discount(price, discount_percent):\n    discount_amount = price * (discount_percent / 100)\n    return price - discount_amount\n\nfinal_price = calculate_discount(100, 20)\nprint(final_price)",
    "options": ["80", "20", "100", "80.0"],
    "correctAnswer": 3,
    "explanation": " Ligne 2 : Calcul du montant de remise\n• discount_percent / 100 = 20 / 100 = 0.2\n• price * 0.2 = 100 * 0.2 = 20.0\n\n Ligne 3 : Calcul du prix final\n• price - discount_amount = 100 - 20.0 = 80.0\n• return retourne 80.0 (float)\n\n Ligne 6 : print() affiche 80.0 (pas 80, car division = float)",
    "highlightedLines": [2, 3],
    "xpGain": 10,
    "tags": ["functions", "return", "arithmetic", "types"]
  },
  {
    "id": "py_medium_007",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "email_list = ['alice@test.com', 'bob@test.com', 'charlie@test.com']\nremoved_email = email_list.pop(1)\nprint(len(email_list))",
    "options": ["3", "2", "1", "bob@test.com"],
    "correctAnswer": 1,
    "explanation": " Ligne 1 : Liste initiale avec 3 emails (index 0, 1, 2)\n\n Ligne 2 : pop(1) retire l'élément à l'index 1\n• Index 1 = 'bob@test.com'\n• Après suppression : ['alice@test.com', 'charlie@test.com']\n• Il reste 2 éléments\n\n Ligne 3 : len() compte les éléments restants → retourne 2",
    "highlightedLines": [2, 3],
    "xpGain": 10,
    "tags": ["lists", "methods", "indexing", "len"]
  },
  {
    "id": "py_medium_008",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "numbers = [1, 2, 3, 4, 5]\nsquared_numbers = [x * x for x in numbers if x % 2 == 0]\nprint(len(squared_numbers))",
    "options": ["5", "2", "3", "4"],
    "correctAnswer": 1,
    "explanation": " Ligne 1 : Liste initiale [1, 2, 3, 4, 5]\n\n Ligne 2 : Compréhension de liste avec filtre\n• if x % 2 == 0 : garde seulement les nombres pairs\n• Nombres pairs : 2 et 4\n• x * x : calcule le carré\n• 2 * 2 = 4, 4 * 4 = 16\n• Résultat : [4, 16]\n\n Ligne 3 : len([4, 16]) = 2",
    "highlightedLines": [2, 3],
    "xpGain": 10,
    "tags": ["list_comprehension", "filtering", "len", "modulo"]
  },
  {
    "id": "py_medium_009",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "counter = 0\npasswords = ['123', 'abc', '456789', 'xyz']\nfor pwd in passwords:\n    if len(pwd) >= 6:\n        counter += 1\nprint(counter)",
    "options": ["4", "1", "2", "0"],
    "correctAnswer": 1,
    "explanation": " Ligne 1 : counter démarre à 0\n\n Ligne 3-5 : Boucle qui teste chaque mot de passe\n• '123' : len = 3 < 6 → pas d'incrémentation\n• 'abc' : len = 3 < 6 → pas d'incrémentation\n• '456789' : len = 6 ≥ 6 → counter += 1 (counter = 1)\n• 'xyz' : len = 3 < 6 → pas d'incrémentation\n\n Ligne 6 : print() affiche 1",
    "highlightedLines": [4, 5],
    "xpGain": 10,
    "tags": ["loops", "conditions", "len", "counter"]
  },
  {
    "id": "py_medium_010",
    "language": "python",
    "difficulty": 2,
    "type": "predict_output",
    "question": "Que renvoie ce programme ?",
    "code": "sales_data = [150, 200, 175, 300, 250]\ntotal_sales = 0\nfor sale in sales_data:\n    total_sales += sale\naverage_sales = total_sales / len(sales_data)\nprint(int(average_sales))",
    "options": ["215", "216", "1075", "200"],
    "correctAnswer": 0,
    "explanation": " Ligne 2-4 : Calcul du total des ventes\n• 150 + 200 + 175 + 300 + 250 = 1075\n\n Ligne 5 : Calcul de la moyenne\n• total_sales / len(sales_data) = 1075 / 5 = 215.0\n\n Ligne 6 : Conversion en entier\n• int(215.0) = 215\n• print() affiche 215",
    "highlightedLines": [5, 6],
    "xpGain": 10,
    "tags": ["loops", "arithmetic", "average", "type_conversion"]
  }
]